Terminals unused in grammar

    RESERVED
    UNARY


Grammar

    0 $accept: Program $end

    1 Program: PACKAGE Id SEMICOLON Declarations

    2 Declarations: Declarations VarDeclaration SEMICOLON
    3             | Declarations FuncDeclaration SEMICOLON
    4             | %empty

    5 VarDeclaration: VAR VarSpec
    6               | VAR LPAR VarSpec SEMICOLON RPAR

    7 VarSpec: Id AuxVarSpec Type
    8        | %empty

    9 AuxVarSpec: COMMA Id AuxVarSpec
   10           | %empty

   11 Type: INT
   12     | FLOAT32
   13     | BOOL
   14     | STRING

   15 FuncDeclaration: FUNC Id LPAR Parameters RPAR Type FuncBody
   16                | FUNC Id LPAR RPAR Type FuncBody
   17                | FUNC Id LPAR Parameters RPAR FuncBody
   18                | FUNC Id LPAR RPAR FuncBody

   19 Parameters: Id Type AuxParameters

   20 AuxParameters: COMMA Id Type AuxParameters
   21              | %empty

   22 FuncBody: LBRACE VarsAndStatements RBRACE

   23 VarsAndStatements: VarsAndStatements VarDeclaration SEMICOLON
   24                  | VarsAndStatements Statement SEMICOLON
   25                  | VarsAndStatements SEMICOLON
   26                  | %empty

   27 Statement: Id ASSIGN Expr
   28          | LBRACE AuxStatement RBRACE
   29          | IF Expr LBRACE AuxStatement RBRACE
   30          | IF Expr LBRACE AuxStatement RBRACE ELSE LBRACE AuxStatement RBRACE
   31          | FOR Expr LBRACE AuxStatement RBRACE
   32          | FOR LBRACE AuxStatement RBRACE
   33          | RETURN
   34          | RETURN Expr
   35          | FuncInvocation
   36          | ParseArgs
   37          | PRINT LPAR Expr RPAR
   38          | PRINT LPAR STRLIT RPAR
   39          | error

   40 AuxStatement: AuxStatement Statement SEMICOLON
   41             | %empty

   42 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   43          | Id COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR

   44 FuncInvocation: Id LPAR AuxFuncInvocation RPAR
   45               | Id LPAR error RPAR

   46 AuxFuncInvocation: Expr
   47                  | COMMA Expr

   48 Expr: Expr OR Expr
   49     | Expr AND Expr
   50     | Expr LT Expr
   51     | Expr GT Expr
   52     | Expr EQ Expr
   53     | Expr NE Expr
   54     | Expr LE Expr
   55     | Expr GE Expr
   56     | Expr PLUS Expr
   57     | Expr MINUS Expr
   58     | Expr STAR Expr
   59     | Expr DIV Expr
   60     | Expr MOD Expr
   61     | NOT Expr
   62     | MINUS Expr
   63     | PLUS Expr
   64     | INTLIT
   65     | REALLIT
   66     | Id
   67     | FuncInvocation

   68 $@1: %empty

   69 Expr: LPAR error $@1 RPAR
   70     | LPAR Expr RPAR

   71 Id: ID


Terminals, with rules where they appear

    $end (0) 0
    error (256) 39 43 45 69
    PACKAGE (258) 1
    SEMICOLON (259) 1 2 3 6 23 24 25 40
    VAR (260) 5 6
    LPAR (261) 6 15 16 17 18 37 38 42 43 44 45 69 70
    RPAR (262) 6 15 16 17 18 37 38 42 43 44 45 69 70
    COMMA (263) 9 20 42 43 47
    INT (264) 11
    FLOAT32 (265) 12
    BOOL (266) 13
    STRING (267) 14
    FUNC (268) 15 16 17 18
    LBRACE (269) 22 28 29 30 31 32
    RBRACE (270) 22 28 29 30 31 32
    ASSIGN (271) 27 42 43
    ELSE (272) 30
    IF (273) 29 30
    FOR (274) 31 32
    RETURN (275) 33 34
    PRINT (276) 37 38
    BLANKID (277) 42 43
    PARSEINT (278) 42 43
    CMDARGS (279) 42
    LSQ (280) 42
    RSQ (281) 42
    OR (282) 48
    AND (283) 49
    LT (284) 50
    GT (285) 51
    EQ (286) 52
    NE (287) 53
    LE (288) 54
    GE (289) 55
    PLUS (290) 56 63
    MINUS (291) 57 62
    STAR (292) 58
    DIV (293) 59
    MOD (294) 60
    NOT (295) 61
    STRLIT <string> (296) 38
    RESERVED <string> (297)
    INTLIT <string> (298) 64
    ID <string> (299) 71
    REALLIT <string> (300) 65
    UNARY (301)


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    Program <node> (48)
        on left: 1
        on right: 0
    Declarations <node> (49)
        on left: 2 3 4
        on right: 1 2 3
    VarDeclaration <node> (50)
        on left: 5 6
        on right: 2 23
    VarSpec <node> (51)
        on left: 7 8
        on right: 5 6
    AuxVarSpec <node> (52)
        on left: 9 10
        on right: 7 9
    Type <node> (53)
        on left: 11 12 13 14
        on right: 7 15 16 19 20
    FuncDeclaration <node> (54)
        on left: 15 16 17 18
        on right: 3
    Parameters <node> (55)
        on left: 19
        on right: 15 17
    AuxParameters <node> (56)
        on left: 20 21
        on right: 19 20
    FuncBody <node> (57)
        on left: 22
        on right: 15 16 17 18
    VarsAndStatements <node> (58)
        on left: 23 24 25 26
        on right: 22 23 24 25
    Statement <node> (59)
        on left: 27 28 29 30 31 32 33 34 35 36 37 38 39
        on right: 24 40
    AuxStatement <node> (60)
        on left: 40 41
        on right: 28 29 30 31 32 40
    ParseArgs <node> (61)
        on left: 42 43
        on right: 36
    FuncInvocation <node> (62)
        on left: 44 45
        on right: 35 67
    AuxFuncInvocation <node> (63)
        on left: 46 47
        on right: 44
    Expr <node> (64)
        on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 69 70
        on right: 27 29 30 31 34 37 42 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 70
    $@1 (65)
        on left: 68
        on right: 69
    Id <node> (66)
        on left: 71
        on right: 1 7 9 15 16 17 18 19 20 27 42 43 44 45 66


State 0

    0 $accept: . Program $end

    PACKAGE  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: PACKAGE . Id SEMICOLON Declarations

    ID  shift, and go to state 3

    Id  go to state 4


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

   71 Id: ID .

    $default  reduce using rule 71 (Id)


State 4

    1 Program: PACKAGE Id . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 6


State 5

    0 $accept: Program $end .

    $default  accept


State 6

    1 Program: PACKAGE Id SEMICOLON . Declarations

    $default  reduce using rule 4 (Declarations)

    Declarations  go to state 7


State 7

    1 Program: PACKAGE Id SEMICOLON Declarations .
    2 Declarations: Declarations . VarDeclaration SEMICOLON
    3             | Declarations . FuncDeclaration SEMICOLON

    VAR   shift, and go to state 8
    FUNC  shift, and go to state 9

    $default  reduce using rule 1 (Program)

    VarDeclaration   go to state 10
    FuncDeclaration  go to state 11


State 8

    5 VarDeclaration: VAR . VarSpec
    6               | VAR . LPAR VarSpec SEMICOLON RPAR

    LPAR  shift, and go to state 12
    ID    shift, and go to state 3

    $default  reduce using rule 8 (VarSpec)

    VarSpec  go to state 13
    Id       go to state 14


State 9

   15 FuncDeclaration: FUNC . Id LPAR Parameters RPAR Type FuncBody
   16                | FUNC . Id LPAR RPAR Type FuncBody
   17                | FUNC . Id LPAR Parameters RPAR FuncBody
   18                | FUNC . Id LPAR RPAR FuncBody

    ID  shift, and go to state 3

    Id  go to state 15


State 10

    2 Declarations: Declarations VarDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 16


State 11

    3 Declarations: Declarations FuncDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 17


State 12

    6 VarDeclaration: VAR LPAR . VarSpec SEMICOLON RPAR

    ID  shift, and go to state 3

    $default  reduce using rule 8 (VarSpec)

    VarSpec  go to state 18
    Id       go to state 14


State 13

    5 VarDeclaration: VAR VarSpec .

    $default  reduce using rule 5 (VarDeclaration)


State 14

    7 VarSpec: Id . AuxVarSpec Type

    COMMA  shift, and go to state 19

    $default  reduce using rule 10 (AuxVarSpec)

    AuxVarSpec  go to state 20


State 15

   15 FuncDeclaration: FUNC Id . LPAR Parameters RPAR Type FuncBody
   16                | FUNC Id . LPAR RPAR Type FuncBody
   17                | FUNC Id . LPAR Parameters RPAR FuncBody
   18                | FUNC Id . LPAR RPAR FuncBody

    LPAR  shift, and go to state 21


State 16

    2 Declarations: Declarations VarDeclaration SEMICOLON .

    $default  reduce using rule 2 (Declarations)


State 17

    3 Declarations: Declarations FuncDeclaration SEMICOLON .

    $default  reduce using rule 3 (Declarations)


State 18

    6 VarDeclaration: VAR LPAR VarSpec . SEMICOLON RPAR

    SEMICOLON  shift, and go to state 22


State 19

    9 AuxVarSpec: COMMA . Id AuxVarSpec

    ID  shift, and go to state 3

    Id  go to state 23


State 20

    7 VarSpec: Id AuxVarSpec . Type

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type  go to state 28


State 21

   15 FuncDeclaration: FUNC Id LPAR . Parameters RPAR Type FuncBody
   16                | FUNC Id LPAR . RPAR Type FuncBody
   17                | FUNC Id LPAR . Parameters RPAR FuncBody
   18                | FUNC Id LPAR . RPAR FuncBody

    RPAR  shift, and go to state 29
    ID    shift, and go to state 3

    Parameters  go to state 30
    Id          go to state 31


State 22

    6 VarDeclaration: VAR LPAR VarSpec SEMICOLON . RPAR

    RPAR  shift, and go to state 32


State 23

    9 AuxVarSpec: COMMA Id . AuxVarSpec

    COMMA  shift, and go to state 19

    $default  reduce using rule 10 (AuxVarSpec)

    AuxVarSpec  go to state 33


State 24

   11 Type: INT .

    $default  reduce using rule 11 (Type)


State 25

   12 Type: FLOAT32 .

    $default  reduce using rule 12 (Type)


State 26

   13 Type: BOOL .

    $default  reduce using rule 13 (Type)


State 27

   14 Type: STRING .

    $default  reduce using rule 14 (Type)


State 28

    7 VarSpec: Id AuxVarSpec Type .

    $default  reduce using rule 7 (VarSpec)


State 29

   16 FuncDeclaration: FUNC Id LPAR RPAR . Type FuncBody
   18                | FUNC Id LPAR RPAR . FuncBody

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27
    LBRACE   shift, and go to state 34

    Type      go to state 35
    FuncBody  go to state 36


State 30

   15 FuncDeclaration: FUNC Id LPAR Parameters . RPAR Type FuncBody
   17                | FUNC Id LPAR Parameters . RPAR FuncBody

    RPAR  shift, and go to state 37


State 31

   19 Parameters: Id . Type AuxParameters

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type  go to state 38


State 32

    6 VarDeclaration: VAR LPAR VarSpec SEMICOLON RPAR .

    $default  reduce using rule 6 (VarDeclaration)


State 33

    9 AuxVarSpec: COMMA Id AuxVarSpec .

    $default  reduce using rule 9 (AuxVarSpec)


State 34

   22 FuncBody: LBRACE . VarsAndStatements RBRACE

    $default  reduce using rule 26 (VarsAndStatements)

    VarsAndStatements  go to state 39


State 35

   16 FuncDeclaration: FUNC Id LPAR RPAR Type . FuncBody

    LBRACE  shift, and go to state 34

    FuncBody  go to state 40


State 36

   18 FuncDeclaration: FUNC Id LPAR RPAR FuncBody .

    $default  reduce using rule 18 (FuncDeclaration)


State 37

   15 FuncDeclaration: FUNC Id LPAR Parameters RPAR . Type FuncBody
   17                | FUNC Id LPAR Parameters RPAR . FuncBody

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27
    LBRACE   shift, and go to state 34

    Type      go to state 41
    FuncBody  go to state 42


State 38

   19 Parameters: Id Type . AuxParameters

    COMMA  shift, and go to state 43

    $default  reduce using rule 21 (AuxParameters)

    AuxParameters  go to state 44


State 39

   22 FuncBody: LBRACE VarsAndStatements . RBRACE
   23 VarsAndStatements: VarsAndStatements . VarDeclaration SEMICOLON
   24                  | VarsAndStatements . Statement SEMICOLON
   25                  | VarsAndStatements . SEMICOLON

    error      shift, and go to state 45
    SEMICOLON  shift, and go to state 46
    VAR        shift, and go to state 8
    LBRACE     shift, and go to state 47
    RBRACE     shift, and go to state 48
    IF         shift, and go to state 49
    FOR        shift, and go to state 50
    RETURN     shift, and go to state 51
    PRINT      shift, and go to state 52
    ID         shift, and go to state 3

    VarDeclaration  go to state 53
    Statement       go to state 54
    ParseArgs       go to state 55
    FuncInvocation  go to state 56
    Id              go to state 57


State 40

   16 FuncDeclaration: FUNC Id LPAR RPAR Type FuncBody .

    $default  reduce using rule 16 (FuncDeclaration)


State 41

   15 FuncDeclaration: FUNC Id LPAR Parameters RPAR Type . FuncBody

    LBRACE  shift, and go to state 34

    FuncBody  go to state 58


State 42

   17 FuncDeclaration: FUNC Id LPAR Parameters RPAR FuncBody .

    $default  reduce using rule 17 (FuncDeclaration)


State 43

   20 AuxParameters: COMMA . Id Type AuxParameters

    ID  shift, and go to state 3

    Id  go to state 59


State 44

   19 Parameters: Id Type AuxParameters .

    $default  reduce using rule 19 (Parameters)


State 45

   39 Statement: error .

    $default  reduce using rule 39 (Statement)


State 46

   25 VarsAndStatements: VarsAndStatements SEMICOLON .

    $default  reduce using rule 25 (VarsAndStatements)


State 47

   28 Statement: LBRACE . AuxStatement RBRACE

    $default  reduce using rule 41 (AuxStatement)

    AuxStatement  go to state 60


State 48

   22 FuncBody: LBRACE VarsAndStatements RBRACE .

    $default  reduce using rule 22 (FuncBody)


State 49

   29 Statement: IF . Expr LBRACE AuxStatement RBRACE
   30          | IF . Expr LBRACE AuxStatement RBRACE ELSE LBRACE AuxStatement RBRACE

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 68
    Id              go to state 69


State 50

   31 Statement: FOR . Expr LBRACE AuxStatement RBRACE
   32          | FOR . LBRACE AuxStatement RBRACE

    LPAR     shift, and go to state 61
    LBRACE   shift, and go to state 70
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 71
    Id              go to state 69


State 51

   33 Statement: RETURN .
   34          | RETURN . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    $default  reduce using rule 33 (Statement)

    FuncInvocation  go to state 67
    Expr            go to state 72
    Id              go to state 69


State 52

   37 Statement: PRINT . LPAR Expr RPAR
   38          | PRINT . LPAR STRLIT RPAR

    LPAR  shift, and go to state 73


State 53

   23 VarsAndStatements: VarsAndStatements VarDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 54

   24 VarsAndStatements: VarsAndStatements Statement . SEMICOLON

    SEMICOLON  shift, and go to state 75


State 55

   36 Statement: ParseArgs .

    $default  reduce using rule 36 (Statement)


State 56

   35 Statement: FuncInvocation .

    $default  reduce using rule 35 (Statement)


State 57

   27 Statement: Id . ASSIGN Expr
   42 ParseArgs: Id . COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   43          | Id . COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   44 FuncInvocation: Id . LPAR AuxFuncInvocation RPAR
   45               | Id . LPAR error RPAR

    LPAR    shift, and go to state 76
    COMMA   shift, and go to state 77
    ASSIGN  shift, and go to state 78


State 58

   15 FuncDeclaration: FUNC Id LPAR Parameters RPAR Type FuncBody .

    $default  reduce using rule 15 (FuncDeclaration)


State 59

   20 AuxParameters: COMMA Id . Type AuxParameters

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type  go to state 79


State 60

   28 Statement: LBRACE AuxStatement . RBRACE
   40 AuxStatement: AuxStatement . Statement SEMICOLON

    error   shift, and go to state 45
    LBRACE  shift, and go to state 47
    RBRACE  shift, and go to state 80
    IF      shift, and go to state 49
    FOR     shift, and go to state 50
    RETURN  shift, and go to state 51
    PRINT   shift, and go to state 52
    ID      shift, and go to state 3

    Statement       go to state 81
    ParseArgs       go to state 55
    FuncInvocation  go to state 56
    Id              go to state 57


State 61

   69 Expr: LPAR . error $@1 RPAR
   70     | LPAR . Expr RPAR

    error    shift, and go to state 82
    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 83
    Id              go to state 69


State 62

   63 Expr: PLUS . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 84
    Id              go to state 69


State 63

   62 Expr: MINUS . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 85
    Id              go to state 69


State 64

   61 Expr: NOT . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 86
    Id              go to state 69


State 65

   64 Expr: INTLIT .

    $default  reduce using rule 64 (Expr)


State 66

   65 Expr: REALLIT .

    $default  reduce using rule 65 (Expr)


State 67

   67 Expr: FuncInvocation .

    $default  reduce using rule 67 (Expr)


State 68

   29 Statement: IF Expr . LBRACE AuxStatement RBRACE
   30          | IF Expr . LBRACE AuxStatement RBRACE ELSE LBRACE AuxStatement RBRACE
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    LBRACE  shift, and go to state 87
    OR      shift, and go to state 88
    AND     shift, and go to state 89
    LT      shift, and go to state 90
    GT      shift, and go to state 91
    EQ      shift, and go to state 92
    NE      shift, and go to state 93
    LE      shift, and go to state 94
    GE      shift, and go to state 95
    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    STAR    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100


State 69

   44 FuncInvocation: Id . LPAR AuxFuncInvocation RPAR
   45               | Id . LPAR error RPAR
   66 Expr: Id .

    LPAR  shift, and go to state 76

    $default  reduce using rule 66 (Expr)


State 70

   32 Statement: FOR LBRACE . AuxStatement RBRACE

    $default  reduce using rule 41 (AuxStatement)

    AuxStatement  go to state 101


State 71

   31 Statement: FOR Expr . LBRACE AuxStatement RBRACE
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    LBRACE  shift, and go to state 102
    OR      shift, and go to state 88
    AND     shift, and go to state 89
    LT      shift, and go to state 90
    GT      shift, and go to state 91
    EQ      shift, and go to state 92
    NE      shift, and go to state 93
    LE      shift, and go to state 94
    GE      shift, and go to state 95
    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    STAR    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100


State 72

   34 Statement: RETURN Expr .
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    OR     shift, and go to state 88
    AND    shift, and go to state 89
    LT     shift, and go to state 90
    GT     shift, and go to state 91
    EQ     shift, and go to state 92
    NE     shift, and go to state 93
    LE     shift, and go to state 94
    GE     shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 34 (Statement)


State 73

   37 Statement: PRINT LPAR . Expr RPAR
   38          | PRINT LPAR . STRLIT RPAR

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    STRLIT   shift, and go to state 103
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 104
    Id              go to state 69


State 74

   23 VarsAndStatements: VarsAndStatements VarDeclaration SEMICOLON .

    $default  reduce using rule 23 (VarsAndStatements)


State 75

   24 VarsAndStatements: VarsAndStatements Statement SEMICOLON .

    $default  reduce using rule 24 (VarsAndStatements)


State 76

   44 FuncInvocation: Id LPAR . AuxFuncInvocation RPAR
   45               | Id LPAR . error RPAR

    error    shift, and go to state 105
    LPAR     shift, and go to state 61
    COMMA    shift, and go to state 106
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation     go to state 67
    AuxFuncInvocation  go to state 107
    Expr               go to state 108
    Id                 go to state 69


State 77

   42 ParseArgs: Id COMMA . BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   43          | Id COMMA . BLANKID ASSIGN PARSEINT LPAR error RPAR

    BLANKID  shift, and go to state 109


State 78

   27 Statement: Id ASSIGN . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 110
    Id              go to state 69


State 79

   20 AuxParameters: COMMA Id Type . AuxParameters

    COMMA  shift, and go to state 43

    $default  reduce using rule 21 (AuxParameters)

    AuxParameters  go to state 111


State 80

   28 Statement: LBRACE AuxStatement RBRACE .

    $default  reduce using rule 28 (Statement)


State 81

   40 AuxStatement: AuxStatement Statement . SEMICOLON

    SEMICOLON  shift, and go to state 112


State 82

   69 Expr: LPAR error . $@1 RPAR

    $default  reduce using rule 68 ($@1)

    $@1  go to state 113


State 83

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   70     | LPAR Expr . RPAR

    RPAR   shift, and go to state 114
    OR     shift, and go to state 88
    AND    shift, and go to state 89
    LT     shift, and go to state 90
    GT     shift, and go to state 91
    EQ     shift, and go to state 92
    NE     shift, and go to state 93
    LE     shift, and go to state 94
    GE     shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100


State 84

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   63     | PLUS Expr .

    STAR  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 63 (Expr)


State 85

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   62     | MINUS Expr .

    STAR  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 62 (Expr)


State 86

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | NOT Expr .

    STAR  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 61 (Expr)


State 87

   29 Statement: IF Expr LBRACE . AuxStatement RBRACE
   30          | IF Expr LBRACE . AuxStatement RBRACE ELSE LBRACE AuxStatement RBRACE

    $default  reduce using rule 41 (AuxStatement)

    AuxStatement  go to state 115


State 88

   48 Expr: Expr OR . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 116
    Id              go to state 69


State 89

   49 Expr: Expr AND . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 117
    Id              go to state 69


State 90

   50 Expr: Expr LT . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 118
    Id              go to state 69


State 91

   51 Expr: Expr GT . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 119
    Id              go to state 69


State 92

   52 Expr: Expr EQ . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 120
    Id              go to state 69


State 93

   53 Expr: Expr NE . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 121
    Id              go to state 69


State 94

   54 Expr: Expr LE . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 122
    Id              go to state 69


State 95

   55 Expr: Expr GE . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 123
    Id              go to state 69


State 96

   56 Expr: Expr PLUS . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 124
    Id              go to state 69


State 97

   57 Expr: Expr MINUS . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 125
    Id              go to state 69


State 98

   58 Expr: Expr STAR . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 126
    Id              go to state 69


State 99

   59 Expr: Expr DIV . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 127
    Id              go to state 69


State 100

   60 Expr: Expr MOD . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 128
    Id              go to state 69


State 101

   32 Statement: FOR LBRACE AuxStatement . RBRACE
   40 AuxStatement: AuxStatement . Statement SEMICOLON

    error   shift, and go to state 45
    LBRACE  shift, and go to state 47
    RBRACE  shift, and go to state 129
    IF      shift, and go to state 49
    FOR     shift, and go to state 50
    RETURN  shift, and go to state 51
    PRINT   shift, and go to state 52
    ID      shift, and go to state 3

    Statement       go to state 81
    ParseArgs       go to state 55
    FuncInvocation  go to state 56
    Id              go to state 57


State 102

   31 Statement: FOR Expr LBRACE . AuxStatement RBRACE

    $default  reduce using rule 41 (AuxStatement)

    AuxStatement  go to state 130


State 103

   38 Statement: PRINT LPAR STRLIT . RPAR

    RPAR  shift, and go to state 131


State 104

   37 Statement: PRINT LPAR Expr . RPAR
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    RPAR   shift, and go to state 132
    OR     shift, and go to state 88
    AND    shift, and go to state 89
    LT     shift, and go to state 90
    GT     shift, and go to state 91
    EQ     shift, and go to state 92
    NE     shift, and go to state 93
    LE     shift, and go to state 94
    GE     shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100


State 105

   45 FuncInvocation: Id LPAR error . RPAR

    RPAR  shift, and go to state 133


State 106

   47 AuxFuncInvocation: COMMA . Expr

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 134
    Id              go to state 69


State 107

   44 FuncInvocation: Id LPAR AuxFuncInvocation . RPAR

    RPAR  shift, and go to state 135


State 108

   46 AuxFuncInvocation: Expr .
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    OR     shift, and go to state 88
    AND    shift, and go to state 89
    LT     shift, and go to state 90
    GT     shift, and go to state 91
    EQ     shift, and go to state 92
    NE     shift, and go to state 93
    LE     shift, and go to state 94
    GE     shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 46 (AuxFuncInvocation)


State 109

   42 ParseArgs: Id COMMA BLANKID . ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   43          | Id COMMA BLANKID . ASSIGN PARSEINT LPAR error RPAR

    ASSIGN  shift, and go to state 136


State 110

   27 Statement: Id ASSIGN Expr .
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    OR     shift, and go to state 88
    AND    shift, and go to state 89
    LT     shift, and go to state 90
    GT     shift, and go to state 91
    EQ     shift, and go to state 92
    NE     shift, and go to state 93
    LE     shift, and go to state 94
    GE     shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 27 (Statement)


State 111

   20 AuxParameters: COMMA Id Type AuxParameters .

    $default  reduce using rule 20 (AuxParameters)


State 112

   40 AuxStatement: AuxStatement Statement SEMICOLON .

    $default  reduce using rule 40 (AuxStatement)


State 113

   69 Expr: LPAR error $@1 . RPAR

    RPAR  shift, and go to state 137


State 114

   70 Expr: LPAR Expr RPAR .

    $default  reduce using rule 70 (Expr)


State 115

   29 Statement: IF Expr LBRACE AuxStatement . RBRACE
   30          | IF Expr LBRACE AuxStatement . RBRACE ELSE LBRACE AuxStatement RBRACE
   40 AuxStatement: AuxStatement . Statement SEMICOLON

    error   shift, and go to state 45
    LBRACE  shift, and go to state 47
    RBRACE  shift, and go to state 138
    IF      shift, and go to state 49
    FOR     shift, and go to state 50
    RETURN  shift, and go to state 51
    PRINT   shift, and go to state 52
    ID      shift, and go to state 3

    Statement       go to state 81
    ParseArgs       go to state 55
    FuncInvocation  go to state 56
    Id              go to state 57


State 116

   48 Expr: Expr . OR Expr
   48     | Expr OR Expr .
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    AND    shift, and go to state 89
    LT     shift, and go to state 90
    GT     shift, and go to state 91
    EQ     shift, and go to state 92
    NE     shift, and go to state 93
    LE     shift, and go to state 94
    GE     shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 48 (Expr)


State 117

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   49     | Expr AND Expr .
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    LT     shift, and go to state 90
    GT     shift, and go to state 91
    EQ     shift, and go to state 92
    NE     shift, and go to state 93
    LE     shift, and go to state 94
    GE     shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 49 (Expr)


State 118

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   50     | Expr LT Expr .
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 50 (Expr)


State 119

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   51     | Expr GT Expr .
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 51 (Expr)


State 120

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   52     | Expr EQ Expr .
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 52 (Expr)


State 121

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   53     | Expr NE Expr .
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 53 (Expr)


State 122

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   54     | Expr LE Expr .
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 54 (Expr)


State 123

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   55     | Expr GE Expr .
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 55 (Expr)


State 124

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   56     | Expr PLUS Expr .
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    STAR  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 56 (Expr)


State 125

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   57     | Expr MINUS Expr .
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    STAR  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 57 (Expr)


State 126

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   58     | Expr STAR Expr .
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    $default  reduce using rule 58 (Expr)


State 127

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   59     | Expr DIV Expr .
   60     | Expr . MOD Expr

    $default  reduce using rule 59 (Expr)


State 128

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   60     | Expr MOD Expr .

    $default  reduce using rule 60 (Expr)


State 129

   32 Statement: FOR LBRACE AuxStatement RBRACE .

    $default  reduce using rule 32 (Statement)


State 130

   31 Statement: FOR Expr LBRACE AuxStatement . RBRACE
   40 AuxStatement: AuxStatement . Statement SEMICOLON

    error   shift, and go to state 45
    LBRACE  shift, and go to state 47
    RBRACE  shift, and go to state 139
    IF      shift, and go to state 49
    FOR     shift, and go to state 50
    RETURN  shift, and go to state 51
    PRINT   shift, and go to state 52
    ID      shift, and go to state 3

    Statement       go to state 81
    ParseArgs       go to state 55
    FuncInvocation  go to state 56
    Id              go to state 57


State 131

   38 Statement: PRINT LPAR STRLIT RPAR .

    $default  reduce using rule 38 (Statement)


State 132

   37 Statement: PRINT LPAR Expr RPAR .

    $default  reduce using rule 37 (Statement)


State 133

   45 FuncInvocation: Id LPAR error RPAR .

    $default  reduce using rule 45 (FuncInvocation)


State 134

   47 AuxFuncInvocation: COMMA Expr .
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    OR     shift, and go to state 88
    AND    shift, and go to state 89
    LT     shift, and go to state 90
    GT     shift, and go to state 91
    EQ     shift, and go to state 92
    NE     shift, and go to state 93
    LE     shift, and go to state 94
    GE     shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 47 (AuxFuncInvocation)


State 135

   44 FuncInvocation: Id LPAR AuxFuncInvocation RPAR .

    $default  reduce using rule 44 (FuncInvocation)


State 136

   42 ParseArgs: Id COMMA BLANKID ASSIGN . PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   43          | Id COMMA BLANKID ASSIGN . PARSEINT LPAR error RPAR

    PARSEINT  shift, and go to state 140


State 137

   69 Expr: LPAR error $@1 RPAR .

    $default  reduce using rule 69 (Expr)


State 138

   29 Statement: IF Expr LBRACE AuxStatement RBRACE .
   30          | IF Expr LBRACE AuxStatement RBRACE . ELSE LBRACE AuxStatement RBRACE

    ELSE  shift, and go to state 141

    $default  reduce using rule 29 (Statement)


State 139

   31 Statement: FOR Expr LBRACE AuxStatement RBRACE .

    $default  reduce using rule 31 (Statement)


State 140

   42 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT . LPAR CMDARGS LSQ Expr RSQ RPAR
   43          | Id COMMA BLANKID ASSIGN PARSEINT . LPAR error RPAR

    LPAR  shift, and go to state 142


State 141

   30 Statement: IF Expr LBRACE AuxStatement RBRACE ELSE . LBRACE AuxStatement RBRACE

    LBRACE  shift, and go to state 143


State 142

   42 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT LPAR . CMDARGS LSQ Expr RSQ RPAR
   43          | Id COMMA BLANKID ASSIGN PARSEINT LPAR . error RPAR

    error    shift, and go to state 144
    CMDARGS  shift, and go to state 145


State 143

   30 Statement: IF Expr LBRACE AuxStatement RBRACE ELSE LBRACE . AuxStatement RBRACE

    $default  reduce using rule 41 (AuxStatement)

    AuxStatement  go to state 146


State 144

   43 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT LPAR error . RPAR

    RPAR  shift, and go to state 147


State 145

   42 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 148


State 146

   30 Statement: IF Expr LBRACE AuxStatement RBRACE ELSE LBRACE AuxStatement . RBRACE
   40 AuxStatement: AuxStatement . Statement SEMICOLON

    error   shift, and go to state 45
    LBRACE  shift, and go to state 47
    RBRACE  shift, and go to state 149
    IF      shift, and go to state 49
    FOR     shift, and go to state 50
    RETURN  shift, and go to state 51
    PRINT   shift, and go to state 52
    ID      shift, and go to state 3

    Statement       go to state 81
    ParseArgs       go to state 55
    FuncInvocation  go to state 56
    Id              go to state 57


State 147

   43 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR .

    $default  reduce using rule 43 (ParseArgs)


State 148

   42 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ . Expr RSQ RPAR

    LPAR     shift, and go to state 61
    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    NOT      shift, and go to state 64
    INTLIT   shift, and go to state 65
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 150
    Id              go to state 69


State 149

   30 Statement: IF Expr LBRACE AuxStatement RBRACE ELSE LBRACE AuxStatement RBRACE .

    $default  reduce using rule 30 (Statement)


State 150

   42 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr . RSQ RPAR
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    RSQ    shift, and go to state 151
    OR     shift, and go to state 88
    AND    shift, and go to state 89
    LT     shift, and go to state 90
    GT     shift, and go to state 91
    EQ     shift, and go to state 92
    NE     shift, and go to state 93
    LE     shift, and go to state 94
    GE     shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100


State 151

   42 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 152


State 152

   42 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR .

    $default  reduce using rule 42 (ParseArgs)
