Terminals unused in grammar

    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: PACKAGE Id SEMICOLON Declarations

    2 Declarations: VarDeclaration SEMICOLON Declarations
    3             | FuncDeclaration SEMICOLON Declarations
    4             | %empty

    5 VarDeclaration: VAR VarSpec
    6               | VAR LPAR VarSpec SEMICOLON RPAR

    7 VarSpec: Id AuxVarSpec Type
    8        | %empty

    9 AuxVarSpec: COMMA Id AuxVarSpec
   10           | %empty

   11 Type: INT
   12     | FLOAT32
   13     | BOOL
   14     | STRING

   15 FuncDeclaration: FUNC Id LPAR Parameters RPAR Type FuncBody
   16                | FUNC Id LPAR RPAR Type FuncBody
   17                | FUNC Id LPAR Parameters RPAR FuncBody
   18                | FUNC Id LPAR RPAR FuncBody

   19 Parameters: Id Type AuxParameters

   20 AuxParameters: COMMA Id Type AuxParameters
   21              | %empty

   22 FuncBody: LBRACE VarsAndStatements RBRACE

   23 VarsAndStatements: VarsAndStatements VarDeclaration SEMICOLON
   24                  | VarsAndStatements Statement SEMICOLON
   25                  | VarsAndStatements SEMICOLON
   26                  | %empty

   27 Statement: Id ASSIGN Expr
   28          | LBRACE AuxStatement RBRACE
   29          | IF Expr LBRACE AuxStatement RBRACE
   30          | IF Expr LBRACE AuxStatement RBRACE ELSE LBRACE AuxStatement RBRACE
   31          | FOR Expr LBRACE AuxStatement RBRACE
   32          | FOR LBRACE AuxStatement RBRACE
   33          | RETURN
   34          | RETURN Expr
   35          | FuncInvocation
   36          | ParseArgs
   37          | PRINT LPAR Expr RPAR
   38          | PRINT LPAR STRLIT RPAR
   39          | error

   40 AuxStatement: Statement SEMICOLON AuxStatement
   41             | %empty

   42 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   43          | Id COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR

   44 FuncInvocation: Id LPAR CallParams RPAR
   45               | Id LPAR error RPAR

   46 CallParams: Expr AuxCallParams
   47           | %empty

   48 AuxCallParams: COMMA Expr AuxCallParams
   49              | %empty

   50 Expr: Expr OR Expr
   51     | Expr AND Expr
   52     | Expr LT Expr
   53     | Expr GT Expr
   54     | Expr EQ Expr
   55     | Expr NE Expr
   56     | Expr LE Expr
   57     | Expr GE Expr
   58     | Expr PLUS Expr
   59     | Expr MINUS Expr
   60     | Expr STAR Expr
   61     | Expr DIV Expr
   62     | Expr MOD Expr
   63     | NOT Expr
   64     | MINUS Expr
   65     | PLUS Expr
   66     | INTLIT
   67     | REALLIT
   68     | Id
   69     | FuncInvocation
   70     | LPAR error RPAR
   71     | LPAR Expr RPAR

   72 Id: ID


Terminals, with rules where they appear

    $end (0) 0
    error (256) 39 43 45 70
    PACKAGE (258) 1
    SEMICOLON (259) 1 2 3 6 23 24 25 40
    VAR (260) 5 6
    LPAR (261) 6 15 16 17 18 37 38 42 43 44 45 70 71
    RPAR (262) 6 15 16 17 18 37 38 42 43 44 45 70 71
    COMMA (263) 9 20 42 43 48
    INT (264) 11
    FLOAT32 (265) 12
    BOOL (266) 13
    STRING (267) 14
    FUNC (268) 15 16 17 18
    LBRACE (269) 22 28 29 30 31 32
    RBRACE (270) 22 28 29 30 31 32
    ASSIGN (271) 27 42 43
    ELSE (272) 30
    IF (273) 29 30
    FOR (274) 31 32
    RETURN (275) 33 34
    PRINT (276) 37 38
    BLANKID (277) 42 43
    PARSEINT (278) 42 43
    CMDARGS (279) 42
    LSQ (280) 42
    RSQ (281) 42
    OR (282) 50
    AND (283) 51
    LT (284) 52
    GT (285) 53
    EQ (286) 54
    NE (287) 55
    LE (288) 56
    GE (289) 57
    PLUS (290) 58 65
    MINUS (291) 59 64
    STAR (292) 60
    DIV (293) 61
    MOD (294) 62
    NOT (295) 63
    STRLIT <string> (296) 38
    RESERVED <string> (297)
    INTLIT <string> (298) 66
    ID <string> (299) 72
    REALLIT <string> (300) 67
    UNARY (301)


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    Program <node> (48)
        on left: 1
        on right: 0
    Declarations <node> (49)
        on left: 2 3 4
        on right: 1 2 3
    VarDeclaration <node> (50)
        on left: 5 6
        on right: 2 23
    VarSpec <node> (51)
        on left: 7 8
        on right: 5 6
    AuxVarSpec <node> (52)
        on left: 9 10
        on right: 7 9
    Type <node> (53)
        on left: 11 12 13 14
        on right: 7 15 16 19 20
    FuncDeclaration <node> (54)
        on left: 15 16 17 18
        on right: 3
    Parameters <node> (55)
        on left: 19
        on right: 15 17
    AuxParameters <node> (56)
        on left: 20 21
        on right: 19 20
    FuncBody <node> (57)
        on left: 22
        on right: 15 16 17 18
    VarsAndStatements <node> (58)
        on left: 23 24 25 26
        on right: 22 23 24 25
    Statement <node> (59)
        on left: 27 28 29 30 31 32 33 34 35 36 37 38 39
        on right: 24 40
    AuxStatement <node> (60)
        on left: 40 41
        on right: 28 29 30 31 32 40
    ParseArgs <node> (61)
        on left: 42 43
        on right: 36
    FuncInvocation <node> (62)
        on left: 44 45
        on right: 35 69
    CallParams <node> (63)
        on left: 46 47
        on right: 44
    AuxCallParams <node> (64)
        on left: 48 49
        on right: 46 48
    Expr <node> (65)
        on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
        on right: 27 29 30 31 34 37 42 46 48 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 71
    Id <node> (66)
        on left: 72
        on right: 1 7 9 15 16 17 18 19 20 27 42 43 44 45 68


State 0

    0 $accept: . Program $end

    PACKAGE  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: PACKAGE . Id SEMICOLON Declarations

    ID  shift, and go to state 3

    Id  go to state 4


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

   72 Id: ID .

    $default  reduce using rule 72 (Id)


State 4

    1 Program: PACKAGE Id . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 6


State 5

    0 $accept: Program $end .

    $default  accept


State 6

    1 Program: PACKAGE Id SEMICOLON . Declarations

    VAR   shift, and go to state 7
    FUNC  shift, and go to state 8

    $default  reduce using rule 4 (Declarations)

    Declarations     go to state 9
    VarDeclaration   go to state 10
    FuncDeclaration  go to state 11


State 7

    5 VarDeclaration: VAR . VarSpec
    6               | VAR . LPAR VarSpec SEMICOLON RPAR

    LPAR  shift, and go to state 12
    ID    shift, and go to state 3

    $default  reduce using rule 8 (VarSpec)

    VarSpec  go to state 13
    Id       go to state 14


State 8

   15 FuncDeclaration: FUNC . Id LPAR Parameters RPAR Type FuncBody
   16                | FUNC . Id LPAR RPAR Type FuncBody
   17                | FUNC . Id LPAR Parameters RPAR FuncBody
   18                | FUNC . Id LPAR RPAR FuncBody

    ID  shift, and go to state 3

    Id  go to state 15


State 9

    1 Program: PACKAGE Id SEMICOLON Declarations .

    $default  reduce using rule 1 (Program)


State 10

    2 Declarations: VarDeclaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 16


State 11

    3 Declarations: FuncDeclaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 17


State 12

    6 VarDeclaration: VAR LPAR . VarSpec SEMICOLON RPAR

    ID  shift, and go to state 3

    $default  reduce using rule 8 (VarSpec)

    VarSpec  go to state 18
    Id       go to state 14


State 13

    5 VarDeclaration: VAR VarSpec .

    $default  reduce using rule 5 (VarDeclaration)


State 14

    7 VarSpec: Id . AuxVarSpec Type

    COMMA  shift, and go to state 19

    $default  reduce using rule 10 (AuxVarSpec)

    AuxVarSpec  go to state 20


State 15

   15 FuncDeclaration: FUNC Id . LPAR Parameters RPAR Type FuncBody
   16                | FUNC Id . LPAR RPAR Type FuncBody
   17                | FUNC Id . LPAR Parameters RPAR FuncBody
   18                | FUNC Id . LPAR RPAR FuncBody

    LPAR  shift, and go to state 21


State 16

    2 Declarations: VarDeclaration SEMICOLON . Declarations

    VAR   shift, and go to state 7
    FUNC  shift, and go to state 8

    $default  reduce using rule 4 (Declarations)

    Declarations     go to state 22
    VarDeclaration   go to state 10
    FuncDeclaration  go to state 11


State 17

    3 Declarations: FuncDeclaration SEMICOLON . Declarations

    VAR   shift, and go to state 7
    FUNC  shift, and go to state 8

    $default  reduce using rule 4 (Declarations)

    Declarations     go to state 23
    VarDeclaration   go to state 10
    FuncDeclaration  go to state 11


State 18

    6 VarDeclaration: VAR LPAR VarSpec . SEMICOLON RPAR

    SEMICOLON  shift, and go to state 24


State 19

    9 AuxVarSpec: COMMA . Id AuxVarSpec

    ID  shift, and go to state 3

    Id  go to state 25


State 20

    7 VarSpec: Id AuxVarSpec . Type

    INT      shift, and go to state 26
    FLOAT32  shift, and go to state 27
    BOOL     shift, and go to state 28
    STRING   shift, and go to state 29

    Type  go to state 30


State 21

   15 FuncDeclaration: FUNC Id LPAR . Parameters RPAR Type FuncBody
   16                | FUNC Id LPAR . RPAR Type FuncBody
   17                | FUNC Id LPAR . Parameters RPAR FuncBody
   18                | FUNC Id LPAR . RPAR FuncBody

    RPAR  shift, and go to state 31
    ID    shift, and go to state 3

    Parameters  go to state 32
    Id          go to state 33


State 22

    2 Declarations: VarDeclaration SEMICOLON Declarations .

    $default  reduce using rule 2 (Declarations)


State 23

    3 Declarations: FuncDeclaration SEMICOLON Declarations .

    $default  reduce using rule 3 (Declarations)


State 24

    6 VarDeclaration: VAR LPAR VarSpec SEMICOLON . RPAR

    RPAR  shift, and go to state 34


State 25

    9 AuxVarSpec: COMMA Id . AuxVarSpec

    COMMA  shift, and go to state 19

    $default  reduce using rule 10 (AuxVarSpec)

    AuxVarSpec  go to state 35


State 26

   11 Type: INT .

    $default  reduce using rule 11 (Type)


State 27

   12 Type: FLOAT32 .

    $default  reduce using rule 12 (Type)


State 28

   13 Type: BOOL .

    $default  reduce using rule 13 (Type)


State 29

   14 Type: STRING .

    $default  reduce using rule 14 (Type)


State 30

    7 VarSpec: Id AuxVarSpec Type .

    $default  reduce using rule 7 (VarSpec)


State 31

   16 FuncDeclaration: FUNC Id LPAR RPAR . Type FuncBody
   18                | FUNC Id LPAR RPAR . FuncBody

    INT      shift, and go to state 26
    FLOAT32  shift, and go to state 27
    BOOL     shift, and go to state 28
    STRING   shift, and go to state 29
    LBRACE   shift, and go to state 36

    Type      go to state 37
    FuncBody  go to state 38


State 32

   15 FuncDeclaration: FUNC Id LPAR Parameters . RPAR Type FuncBody
   17                | FUNC Id LPAR Parameters . RPAR FuncBody

    RPAR  shift, and go to state 39


State 33

   19 Parameters: Id . Type AuxParameters

    INT      shift, and go to state 26
    FLOAT32  shift, and go to state 27
    BOOL     shift, and go to state 28
    STRING   shift, and go to state 29

    Type  go to state 40


State 34

    6 VarDeclaration: VAR LPAR VarSpec SEMICOLON RPAR .

    $default  reduce using rule 6 (VarDeclaration)


State 35

    9 AuxVarSpec: COMMA Id AuxVarSpec .

    $default  reduce using rule 9 (AuxVarSpec)


State 36

   22 FuncBody: LBRACE . VarsAndStatements RBRACE

    $default  reduce using rule 26 (VarsAndStatements)

    VarsAndStatements  go to state 41


State 37

   16 FuncDeclaration: FUNC Id LPAR RPAR Type . FuncBody

    LBRACE  shift, and go to state 36

    FuncBody  go to state 42


State 38

   18 FuncDeclaration: FUNC Id LPAR RPAR FuncBody .

    $default  reduce using rule 18 (FuncDeclaration)


State 39

   15 FuncDeclaration: FUNC Id LPAR Parameters RPAR . Type FuncBody
   17                | FUNC Id LPAR Parameters RPAR . FuncBody

    INT      shift, and go to state 26
    FLOAT32  shift, and go to state 27
    BOOL     shift, and go to state 28
    STRING   shift, and go to state 29
    LBRACE   shift, and go to state 36

    Type      go to state 43
    FuncBody  go to state 44


State 40

   19 Parameters: Id Type . AuxParameters

    COMMA  shift, and go to state 45

    $default  reduce using rule 21 (AuxParameters)

    AuxParameters  go to state 46


State 41

   22 FuncBody: LBRACE VarsAndStatements . RBRACE
   23 VarsAndStatements: VarsAndStatements . VarDeclaration SEMICOLON
   24                  | VarsAndStatements . Statement SEMICOLON
   25                  | VarsAndStatements . SEMICOLON

    error      shift, and go to state 47
    SEMICOLON  shift, and go to state 48
    VAR        shift, and go to state 7
    LBRACE     shift, and go to state 49
    RBRACE     shift, and go to state 50
    IF         shift, and go to state 51
    FOR        shift, and go to state 52
    RETURN     shift, and go to state 53
    PRINT      shift, and go to state 54
    ID         shift, and go to state 3

    VarDeclaration  go to state 55
    Statement       go to state 56
    ParseArgs       go to state 57
    FuncInvocation  go to state 58
    Id              go to state 59


State 42

   16 FuncDeclaration: FUNC Id LPAR RPAR Type FuncBody .

    $default  reduce using rule 16 (FuncDeclaration)


State 43

   15 FuncDeclaration: FUNC Id LPAR Parameters RPAR Type . FuncBody

    LBRACE  shift, and go to state 36

    FuncBody  go to state 60


State 44

   17 FuncDeclaration: FUNC Id LPAR Parameters RPAR FuncBody .

    $default  reduce using rule 17 (FuncDeclaration)


State 45

   20 AuxParameters: COMMA . Id Type AuxParameters

    ID  shift, and go to state 3

    Id  go to state 61


State 46

   19 Parameters: Id Type AuxParameters .

    $default  reduce using rule 19 (Parameters)


State 47

   39 Statement: error .

    $default  reduce using rule 39 (Statement)


State 48

   25 VarsAndStatements: VarsAndStatements SEMICOLON .

    $default  reduce using rule 25 (VarsAndStatements)


State 49

   28 Statement: LBRACE . AuxStatement RBRACE

    error   shift, and go to state 47
    LBRACE  shift, and go to state 49
    IF      shift, and go to state 51
    FOR     shift, and go to state 52
    RETURN  shift, and go to state 53
    PRINT   shift, and go to state 54
    ID      shift, and go to state 3

    RBRACE  reduce using rule 41 (AuxStatement)

    Statement       go to state 62
    AuxStatement    go to state 63
    ParseArgs       go to state 57
    FuncInvocation  go to state 58
    Id              go to state 59


State 50

   22 FuncBody: LBRACE VarsAndStatements RBRACE .

    $default  reduce using rule 22 (FuncBody)


State 51

   29 Statement: IF . Expr LBRACE AuxStatement RBRACE
   30          | IF . Expr LBRACE AuxStatement RBRACE ELSE LBRACE AuxStatement RBRACE

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 71
    Id              go to state 72


State 52

   31 Statement: FOR . Expr LBRACE AuxStatement RBRACE
   32          | FOR . LBRACE AuxStatement RBRACE

    LPAR     shift, and go to state 64
    LBRACE   shift, and go to state 73
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 74
    Id              go to state 72


State 53

   33 Statement: RETURN .
   34          | RETURN . Expr

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    $default  reduce using rule 33 (Statement)

    FuncInvocation  go to state 70
    Expr            go to state 75
    Id              go to state 72


State 54

   37 Statement: PRINT . LPAR Expr RPAR
   38          | PRINT . LPAR STRLIT RPAR

    LPAR  shift, and go to state 76


State 55

   23 VarsAndStatements: VarsAndStatements VarDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 77


State 56

   24 VarsAndStatements: VarsAndStatements Statement . SEMICOLON

    SEMICOLON  shift, and go to state 78


State 57

   36 Statement: ParseArgs .

    $default  reduce using rule 36 (Statement)


State 58

   35 Statement: FuncInvocation .

    $default  reduce using rule 35 (Statement)


State 59

   27 Statement: Id . ASSIGN Expr
   42 ParseArgs: Id . COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   43          | Id . COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   44 FuncInvocation: Id . LPAR CallParams RPAR
   45               | Id . LPAR error RPAR

    LPAR    shift, and go to state 79
    COMMA   shift, and go to state 80
    ASSIGN  shift, and go to state 81


State 60

   15 FuncDeclaration: FUNC Id LPAR Parameters RPAR Type FuncBody .

    $default  reduce using rule 15 (FuncDeclaration)


State 61

   20 AuxParameters: COMMA Id . Type AuxParameters

    INT      shift, and go to state 26
    FLOAT32  shift, and go to state 27
    BOOL     shift, and go to state 28
    STRING   shift, and go to state 29

    Type  go to state 82


State 62

   40 AuxStatement: Statement . SEMICOLON AuxStatement

    SEMICOLON  shift, and go to state 83


State 63

   28 Statement: LBRACE AuxStatement . RBRACE

    RBRACE  shift, and go to state 84


State 64

   70 Expr: LPAR . error RPAR
   71     | LPAR . Expr RPAR

    error    shift, and go to state 85
    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 86
    Id              go to state 72


State 65

   65 Expr: PLUS . Expr

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 87
    Id              go to state 72


State 66

   64 Expr: MINUS . Expr

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 88
    Id              go to state 72


State 67

   63 Expr: NOT . Expr

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 89
    Id              go to state 72


State 68

   66 Expr: INTLIT .

    $default  reduce using rule 66 (Expr)


State 69

   67 Expr: REALLIT .

    $default  reduce using rule 67 (Expr)


State 70

   69 Expr: FuncInvocation .

    $default  reduce using rule 69 (Expr)


State 71

   29 Statement: IF Expr . LBRACE AuxStatement RBRACE
   30          | IF Expr . LBRACE AuxStatement RBRACE ELSE LBRACE AuxStatement RBRACE
   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    LBRACE  shift, and go to state 90
    OR      shift, and go to state 91
    AND     shift, and go to state 92
    LT      shift, and go to state 93
    GT      shift, and go to state 94
    EQ      shift, and go to state 95
    NE      shift, and go to state 96
    LE      shift, and go to state 97
    GE      shift, and go to state 98
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    STAR    shift, and go to state 101
    DIV     shift, and go to state 102
    MOD     shift, and go to state 103


State 72

   44 FuncInvocation: Id . LPAR CallParams RPAR
   45               | Id . LPAR error RPAR
   68 Expr: Id .

    LPAR  shift, and go to state 79

    $default  reduce using rule 68 (Expr)


State 73

   32 Statement: FOR LBRACE . AuxStatement RBRACE

    error   shift, and go to state 47
    LBRACE  shift, and go to state 49
    IF      shift, and go to state 51
    FOR     shift, and go to state 52
    RETURN  shift, and go to state 53
    PRINT   shift, and go to state 54
    ID      shift, and go to state 3

    RBRACE  reduce using rule 41 (AuxStatement)

    Statement       go to state 62
    AuxStatement    go to state 104
    ParseArgs       go to state 57
    FuncInvocation  go to state 58
    Id              go to state 59


State 74

   31 Statement: FOR Expr . LBRACE AuxStatement RBRACE
   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    LBRACE  shift, and go to state 105
    OR      shift, and go to state 91
    AND     shift, and go to state 92
    LT      shift, and go to state 93
    GT      shift, and go to state 94
    EQ      shift, and go to state 95
    NE      shift, and go to state 96
    LE      shift, and go to state 97
    GE      shift, and go to state 98
    PLUS    shift, and go to state 99
    MINUS   shift, and go to state 100
    STAR    shift, and go to state 101
    DIV     shift, and go to state 102
    MOD     shift, and go to state 103


State 75

   34 Statement: RETURN Expr .
   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    OR     shift, and go to state 91
    AND    shift, and go to state 92
    LT     shift, and go to state 93
    GT     shift, and go to state 94
    EQ     shift, and go to state 95
    NE     shift, and go to state 96
    LE     shift, and go to state 97
    GE     shift, and go to state 98
    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    STAR   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103

    $default  reduce using rule 34 (Statement)


State 76

   37 Statement: PRINT LPAR . Expr RPAR
   38          | PRINT LPAR . STRLIT RPAR

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    STRLIT   shift, and go to state 106
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 107
    Id              go to state 72


State 77

   23 VarsAndStatements: VarsAndStatements VarDeclaration SEMICOLON .

    $default  reduce using rule 23 (VarsAndStatements)


State 78

   24 VarsAndStatements: VarsAndStatements Statement SEMICOLON .

    $default  reduce using rule 24 (VarsAndStatements)


State 79

   44 FuncInvocation: Id LPAR . CallParams RPAR
   45               | Id LPAR . error RPAR

    error    shift, and go to state 108
    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    RPAR  reduce using rule 47 (CallParams)

    FuncInvocation  go to state 70
    CallParams      go to state 109
    Expr            go to state 110
    Id              go to state 72


State 80

   42 ParseArgs: Id COMMA . BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   43          | Id COMMA . BLANKID ASSIGN PARSEINT LPAR error RPAR

    BLANKID  shift, and go to state 111


State 81

   27 Statement: Id ASSIGN . Expr

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 112
    Id              go to state 72


State 82

   20 AuxParameters: COMMA Id Type . AuxParameters

    COMMA  shift, and go to state 45

    $default  reduce using rule 21 (AuxParameters)

    AuxParameters  go to state 113


State 83

   40 AuxStatement: Statement SEMICOLON . AuxStatement

    error   shift, and go to state 47
    LBRACE  shift, and go to state 49
    IF      shift, and go to state 51
    FOR     shift, and go to state 52
    RETURN  shift, and go to state 53
    PRINT   shift, and go to state 54
    ID      shift, and go to state 3

    RBRACE  reduce using rule 41 (AuxStatement)

    Statement       go to state 62
    AuxStatement    go to state 114
    ParseArgs       go to state 57
    FuncInvocation  go to state 58
    Id              go to state 59


State 84

   28 Statement: LBRACE AuxStatement RBRACE .

    $default  reduce using rule 28 (Statement)


State 85

   70 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 115


State 86

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   71     | LPAR Expr . RPAR

    RPAR   shift, and go to state 116
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    LT     shift, and go to state 93
    GT     shift, and go to state 94
    EQ     shift, and go to state 95
    NE     shift, and go to state 96
    LE     shift, and go to state 97
    GE     shift, and go to state 98
    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    STAR   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103


State 87

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   65     | PLUS Expr .

    $default  reduce using rule 65 (Expr)


State 88

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   64     | MINUS Expr .

    $default  reduce using rule 64 (Expr)


State 89

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | NOT Expr .

    $default  reduce using rule 63 (Expr)


State 90

   29 Statement: IF Expr LBRACE . AuxStatement RBRACE
   30          | IF Expr LBRACE . AuxStatement RBRACE ELSE LBRACE AuxStatement RBRACE

    error   shift, and go to state 47
    LBRACE  shift, and go to state 49
    IF      shift, and go to state 51
    FOR     shift, and go to state 52
    RETURN  shift, and go to state 53
    PRINT   shift, and go to state 54
    ID      shift, and go to state 3

    RBRACE  reduce using rule 41 (AuxStatement)

    Statement       go to state 62
    AuxStatement    go to state 117
    ParseArgs       go to state 57
    FuncInvocation  go to state 58
    Id              go to state 59


State 91

   50 Expr: Expr OR . Expr

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 118
    Id              go to state 72


State 92

   51 Expr: Expr AND . Expr

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 119
    Id              go to state 72


State 93

   52 Expr: Expr LT . Expr

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 120
    Id              go to state 72


State 94

   53 Expr: Expr GT . Expr

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 121
    Id              go to state 72


State 95

   54 Expr: Expr EQ . Expr

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 122
    Id              go to state 72


State 96

   55 Expr: Expr NE . Expr

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 123
    Id              go to state 72


State 97

   56 Expr: Expr LE . Expr

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 124
    Id              go to state 72


State 98

   57 Expr: Expr GE . Expr

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 125
    Id              go to state 72


State 99

   58 Expr: Expr PLUS . Expr

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 126
    Id              go to state 72


State 100

   59 Expr: Expr MINUS . Expr

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 127
    Id              go to state 72


State 101

   60 Expr: Expr STAR . Expr

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 128
    Id              go to state 72


State 102

   61 Expr: Expr DIV . Expr

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 129
    Id              go to state 72


State 103

   62 Expr: Expr MOD . Expr

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 130
    Id              go to state 72


State 104

   32 Statement: FOR LBRACE AuxStatement . RBRACE

    RBRACE  shift, and go to state 131


State 105

   31 Statement: FOR Expr LBRACE . AuxStatement RBRACE

    error   shift, and go to state 47
    LBRACE  shift, and go to state 49
    IF      shift, and go to state 51
    FOR     shift, and go to state 52
    RETURN  shift, and go to state 53
    PRINT   shift, and go to state 54
    ID      shift, and go to state 3

    RBRACE  reduce using rule 41 (AuxStatement)

    Statement       go to state 62
    AuxStatement    go to state 132
    ParseArgs       go to state 57
    FuncInvocation  go to state 58
    Id              go to state 59


State 106

   38 Statement: PRINT LPAR STRLIT . RPAR

    RPAR  shift, and go to state 133


State 107

   37 Statement: PRINT LPAR Expr . RPAR
   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    RPAR   shift, and go to state 134
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    LT     shift, and go to state 93
    GT     shift, and go to state 94
    EQ     shift, and go to state 95
    NE     shift, and go to state 96
    LE     shift, and go to state 97
    GE     shift, and go to state 98
    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    STAR   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103


State 108

   45 FuncInvocation: Id LPAR error . RPAR

    RPAR  shift, and go to state 135


State 109

   44 FuncInvocation: Id LPAR CallParams . RPAR

    RPAR  shift, and go to state 136


State 110

   46 CallParams: Expr . AuxCallParams
   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    COMMA  shift, and go to state 137
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    LT     shift, and go to state 93
    GT     shift, and go to state 94
    EQ     shift, and go to state 95
    NE     shift, and go to state 96
    LE     shift, and go to state 97
    GE     shift, and go to state 98
    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    STAR   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103

    $default  reduce using rule 49 (AuxCallParams)

    AuxCallParams  go to state 138


State 111

   42 ParseArgs: Id COMMA BLANKID . ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   43          | Id COMMA BLANKID . ASSIGN PARSEINT LPAR error RPAR

    ASSIGN  shift, and go to state 139


State 112

   27 Statement: Id ASSIGN Expr .
   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    OR     shift, and go to state 91
    AND    shift, and go to state 92
    LT     shift, and go to state 93
    GT     shift, and go to state 94
    EQ     shift, and go to state 95
    NE     shift, and go to state 96
    LE     shift, and go to state 97
    GE     shift, and go to state 98
    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    STAR   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103

    $default  reduce using rule 27 (Statement)


State 113

   20 AuxParameters: COMMA Id Type AuxParameters .

    $default  reduce using rule 20 (AuxParameters)


State 114

   40 AuxStatement: Statement SEMICOLON AuxStatement .

    $default  reduce using rule 40 (AuxStatement)


State 115

   70 Expr: LPAR error RPAR .

    $default  reduce using rule 70 (Expr)


State 116

   71 Expr: LPAR Expr RPAR .

    $default  reduce using rule 71 (Expr)


State 117

   29 Statement: IF Expr LBRACE AuxStatement . RBRACE
   30          | IF Expr LBRACE AuxStatement . RBRACE ELSE LBRACE AuxStatement RBRACE

    RBRACE  shift, and go to state 140


State 118

   50 Expr: Expr . OR Expr
   50     | Expr OR Expr .
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    AND    shift, and go to state 92
    LT     shift, and go to state 93
    GT     shift, and go to state 94
    EQ     shift, and go to state 95
    NE     shift, and go to state 96
    LE     shift, and go to state 97
    GE     shift, and go to state 98
    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    STAR   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103

    $default  reduce using rule 50 (Expr)


State 119

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   51     | Expr AND Expr .
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    LT     shift, and go to state 93
    GT     shift, and go to state 94
    EQ     shift, and go to state 95
    NE     shift, and go to state 96
    LE     shift, and go to state 97
    GE     shift, and go to state 98
    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    STAR   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103

    $default  reduce using rule 51 (Expr)


State 120

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   52     | Expr LT Expr .
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    STAR   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103

    $default  reduce using rule 52 (Expr)


State 121

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   53     | Expr GT Expr .
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    STAR   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103

    $default  reduce using rule 53 (Expr)


State 122

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   54     | Expr EQ Expr .
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    STAR   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103

    $default  reduce using rule 54 (Expr)


State 123

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   55     | Expr NE Expr .
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    STAR   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103

    $default  reduce using rule 55 (Expr)


State 124

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   56     | Expr LE Expr .
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    STAR   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103

    $default  reduce using rule 56 (Expr)


State 125

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   57     | Expr GE Expr .
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    STAR   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103

    $default  reduce using rule 57 (Expr)


State 126

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   58     | Expr PLUS Expr .
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    STAR  shift, and go to state 101
    DIV   shift, and go to state 102
    MOD   shift, and go to state 103

    $default  reduce using rule 58 (Expr)


State 127

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   59     | Expr MINUS Expr .
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    STAR  shift, and go to state 101
    DIV   shift, and go to state 102
    MOD   shift, and go to state 103

    $default  reduce using rule 59 (Expr)


State 128

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   60     | Expr STAR Expr .
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    $default  reduce using rule 60 (Expr)


State 129

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   61     | Expr DIV Expr .
   62     | Expr . MOD Expr

    $default  reduce using rule 61 (Expr)


State 130

   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   62     | Expr MOD Expr .

    $default  reduce using rule 62 (Expr)


State 131

   32 Statement: FOR LBRACE AuxStatement RBRACE .

    $default  reduce using rule 32 (Statement)


State 132

   31 Statement: FOR Expr LBRACE AuxStatement . RBRACE

    RBRACE  shift, and go to state 141


State 133

   38 Statement: PRINT LPAR STRLIT RPAR .

    $default  reduce using rule 38 (Statement)


State 134

   37 Statement: PRINT LPAR Expr RPAR .

    $default  reduce using rule 37 (Statement)


State 135

   45 FuncInvocation: Id LPAR error RPAR .

    $default  reduce using rule 45 (FuncInvocation)


State 136

   44 FuncInvocation: Id LPAR CallParams RPAR .

    $default  reduce using rule 44 (FuncInvocation)


State 137

   48 AuxCallParams: COMMA . Expr AuxCallParams

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 142
    Id              go to state 72


State 138

   46 CallParams: Expr AuxCallParams .

    $default  reduce using rule 46 (CallParams)


State 139

   42 ParseArgs: Id COMMA BLANKID ASSIGN . PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   43          | Id COMMA BLANKID ASSIGN . PARSEINT LPAR error RPAR

    PARSEINT  shift, and go to state 143


State 140

   29 Statement: IF Expr LBRACE AuxStatement RBRACE .
   30          | IF Expr LBRACE AuxStatement RBRACE . ELSE LBRACE AuxStatement RBRACE

    ELSE  shift, and go to state 144

    $default  reduce using rule 29 (Statement)


State 141

   31 Statement: FOR Expr LBRACE AuxStatement RBRACE .

    $default  reduce using rule 31 (Statement)


State 142

   48 AuxCallParams: COMMA Expr . AuxCallParams
   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    COMMA  shift, and go to state 137
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    LT     shift, and go to state 93
    GT     shift, and go to state 94
    EQ     shift, and go to state 95
    NE     shift, and go to state 96
    LE     shift, and go to state 97
    GE     shift, and go to state 98
    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    STAR   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103

    $default  reduce using rule 49 (AuxCallParams)

    AuxCallParams  go to state 145


State 143

   42 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT . LPAR CMDARGS LSQ Expr RSQ RPAR
   43          | Id COMMA BLANKID ASSIGN PARSEINT . LPAR error RPAR

    LPAR  shift, and go to state 146


State 144

   30 Statement: IF Expr LBRACE AuxStatement RBRACE ELSE . LBRACE AuxStatement RBRACE

    LBRACE  shift, and go to state 147


State 145

   48 AuxCallParams: COMMA Expr AuxCallParams .

    $default  reduce using rule 48 (AuxCallParams)


State 146

   42 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT LPAR . CMDARGS LSQ Expr RSQ RPAR
   43          | Id COMMA BLANKID ASSIGN PARSEINT LPAR . error RPAR

    error    shift, and go to state 148
    CMDARGS  shift, and go to state 149


State 147

   30 Statement: IF Expr LBRACE AuxStatement RBRACE ELSE LBRACE . AuxStatement RBRACE

    error   shift, and go to state 47
    LBRACE  shift, and go to state 49
    IF      shift, and go to state 51
    FOR     shift, and go to state 52
    RETURN  shift, and go to state 53
    PRINT   shift, and go to state 54
    ID      shift, and go to state 3

    RBRACE  reduce using rule 41 (AuxStatement)

    Statement       go to state 62
    AuxStatement    go to state 150
    ParseArgs       go to state 57
    FuncInvocation  go to state 58
    Id              go to state 59


State 148

   43 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT LPAR error . RPAR

    RPAR  shift, and go to state 151


State 149

   42 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 152


State 150

   30 Statement: IF Expr LBRACE AuxStatement RBRACE ELSE LBRACE AuxStatement . RBRACE

    RBRACE  shift, and go to state 153


State 151

   43 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR .

    $default  reduce using rule 43 (ParseArgs)


State 152

   42 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ . Expr RSQ RPAR

    LPAR     shift, and go to state 64
    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    INTLIT   shift, and go to state 68
    ID       shift, and go to state 3
    REALLIT  shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 154
    Id              go to state 72


State 153

   30 Statement: IF Expr LBRACE AuxStatement RBRACE ELSE LBRACE AuxStatement RBRACE .

    $default  reduce using rule 30 (Statement)


State 154

   42 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr . RSQ RPAR
   50 Expr: Expr . OR Expr
   51     | Expr . AND Expr
   52     | Expr . LT Expr
   53     | Expr . GT Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . LE Expr
   57     | Expr . GE Expr
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr

    RSQ    shift, and go to state 155
    OR     shift, and go to state 91
    AND    shift, and go to state 92
    LT     shift, and go to state 93
    GT     shift, and go to state 94
    EQ     shift, and go to state 95
    NE     shift, and go to state 96
    LE     shift, and go to state 97
    GE     shift, and go to state 98
    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    STAR   shift, and go to state 101
    DIV    shift, and go to state 102
    MOD    shift, and go to state 103


State 155

   42 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 156


State 156

   42 ParseArgs: Id COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR .

    $default  reduce using rule 42 (ParseArgs)
